AWSTemplateFormatVersion: 2010-09-09
Description: Zarr store to MVT

Parameters:
  DeploymentBucketName:
    Type: String
  LambdaRolePermissionsBoundary:
    Type: String
  Zarr2MvtLambdaTimeout:
    Type: Number
  Zarr2MvtLambdaMemorySize:
    Type: Number
  ZarrStoreBucketName:
    Type: String
  MvtTracklineSplitMs:
    Type: Number
  MvtBatchSize:
    Type: Number
  MvtTracklinePrecision:
    Type: Number
  MvtMaxZoomLevel:
    Type: Number
  MvtTracklineMinSimplificationTolerance:
    Type: Number
  MvtTracklineMaxSimplificationTolerance:
    Type: Number
  MvtUploadBuffers:
    Type: Number
  LogRetentionInDays:
    Type: Number
  Version:
    Type: String
  ZarrBucketRegion:
    Type: String
  OutputBucketUserAccessKeyPsName:
    Type: String
  OutputBucketUserSecretAccessKeyPsName:
    Type: String
  MaxConcurrency:
    Type: Number
  TopicArn:
    Type: String
  DeadLetterTopicArn:
    Type: String
  DoneTopicArn:
    Type: String

Conditions:
  HasPermissionsBoundary:
    Fn::Not:
      - Fn::Equals:
          - ""
          - !Ref LambdaRolePermissionsBoundary

Resources:

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      PermissionsBoundary:
        Fn::If:
          - HasPermissionsBoundary
          - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/${LambdaRolePermissionsBoundary}
          - AWS::NoValue
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: Logging
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: !Sub arn:${AWS::Partition}:logs:*:*:*
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
        - PolicyName: SNS
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource:
                  - !Ref DeadLetterTopicArn
                  - !Ref DoneTopicArn
                Action:
                  - 'sns:Publish'

  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref DeploymentBucketName
        S3Key: !Sub lambda/echofish-aws-mvt-lambda-${Version}-lambda.zip
      Handler: edu.colorado.cires.cmg.echofish.aws.lambda.mvt.lambda.MvtLambda::handleRequest
      Runtime: java11
      MemorySize: !Ref Zarr2MvtLambdaMemorySize
      Timeout: !Ref Zarr2MvtLambdaTimeout
      ReservedConcurrentExecutions: !Ref MaxConcurrency
      Role: !GetAtt LambdaRole.Arn
      Environment:
        Variables:
          ZARR_BUCKET_NAME: !Ref ZarrStoreBucketName
          TRACKLINE_SPLIT_MS: !Ref MvtTracklineSplitMs
          BATCH_SIZE: !Ref MvtBatchSize
          GEO_JSON_PRECISION: !Ref MvtTracklinePrecision
          MAX_ZOOM_LEVEL: !Ref MvtMaxZoomLevel
          MIN_SIMPLIFICATION_TOLERANCE: !Ref MvtTracklineMinSimplificationTolerance
          MAX_SIMPLIFICATION_TOLERANCE: !Ref MvtTracklineMaxSimplificationTolerance
          S3_UPLOAD_BUFFERS: !Ref MvtUploadBuffers
          BUCKET_REGION: !Ref ZarrBucketRegion
          ZARR_BUCKET_ACCESS_KEY: !Sub "{{resolve:ssm:${OutputBucketUserAccessKeyPsName}}}"
          ZARR_BUCKET_SECRET_ACCESS_KEY: !Sub "{{resolve:ssm:${OutputBucketUserSecretAccessKeyPsName}}}"
          TOPIC_ARN: !Ref DoneTopicArn

  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref Lambda
      Principal: sns.amazonaws.com
      Action: lambda:InvokeFunction
      SourceArn: !Ref TopicArn

  LambdaSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: lambda
      Endpoint: !GetAtt Lambda.Arn
      TopicArn: !Ref TopicArn

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Lambda}
      RetentionInDays: !Ref LogRetentionInDays

  LambdaEvent:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName: !Ref Lambda
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
      DestinationConfig:
        OnFailure:
          Destination: !Ref DeadLetterTopicArn

  TopicSubscribePolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref TopicArn
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: SubscribeToTopic
            Resource: !Ref TopicArn
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sns:Subscribe
            Condition:
              ArnEquals:
                aws:SourceArn: !GetAtt Lambda.Arn

  TopicDlqPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref DeadLetterTopicArn
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: PublishToTopic
            Effect: Allow
            Resource: !Ref DeadLetterTopicArn
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sns:Publish
            Condition:
              ArnEquals:
                aws:SourceArn:
                  - !GetAtt Lambda.Arn


Outputs:
  LambdaArn:
    Value: !GetAtt Lambda.Arn
  LambdaName:
    Value: !Ref Lambda




