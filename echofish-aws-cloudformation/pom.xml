<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>echofish-aws-cloudformation-parent</artifactId>
    <groupId>edu.colorado.cires.cmg.echofish</groupId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>


  <artifactId>echofish-aws-cloudformation</artifactId>
  <packaging>pom</packaging>

  <!--
  Instructions for adding or updating a new deployment resource:

  1. Add a version property to the properties tag
  2. Add a <requireProperty> rule to the maven-enforcer-plugin
  3. Add a row to resources/resources.csv
  4. Rebuild the CodePipeline CloudFormation template by running mvn clean initialize from the parent project
  5. Update the template in AWS

  -->

  <properties>
    <CruiseSplitterLambda.version>1.0.0-SNAPSHOT</CruiseSplitterLambda.version>
    <ZarrCruiseAccumulatorLambda.version>1.0.0</ZarrCruiseAccumulatorLambda.version>
    <BucketDrainLambda.version>1.0.1</BucketDrainLambda.version>
    <RawToZarrErrorLambda.version>1.0.0</RawToZarrErrorLambda.version>
    <Zarr2MvtLambda.version>1.0.0</Zarr2MvtLambda.version>
    <GeohashLambda.version>1.0.0</GeohashLambda.version>

    <project-root>${project.parent.basedir}</project-root>
    <dashTimestamp>-${maven.build.timestamp}</dashTimestamp>
    <timestamp>${maven.build.timestamp}</timestamp>
    <maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
  </properties>

  <repositories>
    <repository>
      <id>central</id>
      <name>Central Repository</name>
      <url>https://repo.maven.apache.org/maven2</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <releases>
        <enabled>true</enabled>
      </releases>
    </repository>
    <repository>
      <id>ossrh</id>
      <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
        <checksumPolicy>fail</checksumPolicy>
      </snapshots>
    </repository>

    <repository>
      <id>echofish-snapshot</id>
      <url>https://cires-cmg-echofish-repository.s3-us-west-2.amazonaws.com/snapshot</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>echofish-release</id>
      <url>https://cires-cmg-echofish-repository.s3-us-west-2.amazonaws.com/release</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

  <dependencies>
    <dependency>
      <groupId>io.github.ci-cmg.echofish</groupId>
      <artifactId>echofish-aws-cruise-splitter-lambda</artifactId>
      <version>${CruiseSplitterLambda.version}</version>
      <classifier>lambda</classifier>
      <type>zip</type>
    </dependency>
    <dependency>
      <groupId>io.github.ci-cmg.echofish</groupId>
      <artifactId>echofish-aws-mvt-lambda</artifactId>
      <version>${Zarr2MvtLambda.version}</version>
      <classifier>lambda</classifier>
      <type>zip</type>
    </dependency>
    <dependency>
      <groupId>io.github.ci-cmg.echofish</groupId>
      <artifactId>echofish-aws-zarr-cruise-accumulator-lambda</artifactId>
      <version>${ZarrCruiseAccumulatorLambda.version}</version>
      <classifier>lambda</classifier>
      <type>zip</type>
    </dependency>
    <dependency>
      <groupId>io.github.ci-cmg.aws</groupId>
      <artifactId>aws-cf-custom-resource-bucket-drain</artifactId>
      <version>${BucketDrainLambda.version}</version>
      <classifier>lambda</classifier>
      <type>zip</type>
    </dependency>
    <dependency>
      <groupId>io.github.ci-cmg.echofish</groupId>
      <artifactId>echofish-aws-raw-to-zarr-error-handler</artifactId>
      <version>${RawToZarrErrorLambda.version}</version>
      <classifier>lambda</classifier>
      <type>zip</type>
    </dependency>
    <dependency>
      <groupId>io.github.ci-cmg.echofish</groupId>
      <artifactId>echofish-aws-geohash-lambda</artifactId>
      <version>${GeohashLambda.version}</version>
      <classifier>lambda</classifier>
      <type>zip</type>
    </dependency>
  </dependencies>
  <build>
    <extensions>
      <extension>
        <groupId>com.gkatzioura.maven.cloud</groupId>
        <artifactId>s3-storage-wagon</artifactId>
        <version>2.3</version>
      </extension>
    </extensions>

    <plugins>

      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>resources</id>
            <phase>initialize</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/resources</outputDirectory>
              <useDefaultDelimiters>false</useDefaultDelimiters>
              <delimiters>
                <delimiter>@</delimiter>
              </delimiters>
              <resources>
                <resource>
                  <directory>resources</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>cloudformation</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/cloudformation</outputDirectory>
              <useDefaultDelimiters>false</useDefaultDelimiters>
              <delimiters>
                <delimiter>@</delimiter>
              </delimiters>
              <resources>
                <resource>
                  <directory>src${file.separator}cloudformation</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>dev-resources</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/dev-resources</outputDirectory>
              <useDefaultDelimiters>false</useDefaultDelimiters>
              <delimiters>
                <delimiter>@</delimiter>
              </delimiters>
              <resources>
                <resource>
                  <directory>dev-resources</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.2.0</version>
        <configuration>
          <tarLongFileMode>posix</tarLongFileMode>
          <appendAssemblyId>false</appendAssemblyId>
          <descriptors>
            <descriptor>src/assembly/dist.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>



</project>