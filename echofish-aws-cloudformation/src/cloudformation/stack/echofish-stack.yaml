AWSTemplateFormatVersion: 2010-09-09
Description: EchoFish Stack

Parameters:
  StackPrefix:
    Description: A prefix that identifies this stack
    Type: String
  DataSetBucketName:
    Description: The bucket name for the public dataset bucket
    Type: String
  LambdaRolePermissionsBoundary:
    Description: An optional permissions boundary to associate with the Lambda role
    Type: String
    Default: ""
  LogRetentionInDays:
    Description: The number of days to keep CloudWatch logs
    Type: Number
    MinValue: 0
    Default: 30
  ApiLambdaMaxConcurrency:
    Description: The maximum number of concurrent api requests.
    Type: Number
    MinValue: 1
    Default: 3
  ApiLambdaTimeout:
    Description: The timeout in seconds for the api lambda
    Type: Number
    MinValue: 10
    MaxValue: 900
    Default: 120
  ApiLambdaMemorySize:
    Description: The amount of memory for the api lambda
    Type: Number
    MinValue: 256
    Default: 1024
  Raw2ZarrLambdaMaxConcurrency:
    Description: The maximum number of concurrent CSV to Zarr requests.
    Type: Number
    MinValue: 1
    Default: 10
  Raw2ZarrLambdaTimeout:
    Description: The timeout in seconds for the CSV to Zarr lambda
    Type: Number
    MinValue: 10
    MaxValue: 900
    Default: 120
  Raw2ZarrLambdaMemorySize:
    Description: The amount of memory for the CSV to Zarr lambda
    Type: Number
    MinValue: 256
    Default: 512
  ZarrAccumulatorLambdaMaxConcurrency:
    Description: The maximum number of concurrent Zarr accumulation requests.
    Type: Number
    MinValue: 1
    Default: 4
  ZarrAccumulatorLambdaTimeout:
    Description: The timeout in seconds for the Zarr accumulation lambda
    Type: Number
    MinValue: 10
    MaxValue: 900
    Default: 500
  ZarrAccumulatorLambdaMemorySize:
    Description: The amount of memory for the Zarr accumulation lambda
    Type: Number
    MinValue: 256
    Default: 1024
  Zarr2MvtLambdaTimeout:
    Description: The timeout in seconds for the Zarr to MVT lambda
    Type: Number
    MinValue: 10
    MaxValue: 900
    Default: 900
  Zarr2MvtLambdaMemorySize:
    Description: The amount of memory for the Zarr to MVT lambda
    Type: Number
    MinValue: 256
    Default: 2048
  MvtTracklineSplitMs:
    Description: The minimum milliseconds to split a trackline
    Type: Number
    MinValue: 0
    Default: 3600000
  MvtBatchSize:
    Description: The maximum number of points to keep in memory when processing MVTs
    Type: Number
    MinValue: 10
    Default: 10000
  MvtTracklinePrecision:
    Description: The number of decimal points allowed when calculating MVTs
    Type: Number
    MinValue: 1
    Default: 5
  MvtMaxZoomLevel:
    Description: The maximum zoom level that MVTs are generated for
    Type: Number
    MinValue: 5
    Default: 8
  MvtTracklineMinSimplificationTolerance:
    Description: The minimum simplification tolerance when generating MVTs
    Type: Number
    Default: 0.00001
  MvtTracklineMaxSimplificationTolerance:
    Description: The maximum simplification tolerance when generating MVTs
    Type: Number
    Default: 0.01
  MvtUploadBuffers:
    Description: The maximum sets of batches to keep in memory when uploading MVTs
    Type: Number
    MinValue: 1
    Default: 2
  Zarr2GeoHashLambdaTimeout:
    Description: The timeout in seconds for the Zarr to GeoHash lambda
    Type: Number
    MinValue: 10
    MaxValue: 900
    Default: 900
  Zarr2GeoHashLambdaMemorySize:
    Description: The amount of memory for the Zarr to GeoHash lambda
    Type: Number
    MinValue: 256
    Default: 2048
  Zarr2GeoHashLambdaMaxConcurrency:
    Description: The maximum number of concurrent Zarr accumulation requests.
    Type: Number
    MinValue: 1
    Default: 4
  GeoHashUploadBuffers:
    Description: The maximum sets of batches to keep in memory when uploading GeoHashs
    Type: Number
    MinValue: 1
    Default: 3
#  UiBucketName:
#    Type: String
  DeployAdminResources:
    Description: Choose 'yes' to deploy admin API, UI, and related authentication resources
    Type: String
    Default: 'yes'
    AllowedValues:
      - 'yes'
      - 'no'
  Raw2ZarrTerminationQuietPeriodMs:
    Type: Number
    Default: 600000
  Raw2ZarrInstanceType:
    Type: "String"
    Default: "t2.large"
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m1.small
      - m1.medium
      - m1.large
      - m1.xlarge
      - m2.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - c1.medium
      - c1.xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - g2.2xlarge
      - g2.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - hi1.4xlarge
      - hs1.8xlarge
      - cr1.8xlarge
      - cc2.8xlarge
      - cg1.4xlarge
    ConstraintDescription: "must be a valid EC2 instance type."
  Raw2ZarrVolumeSizeGB:
    Type: Number
    MinValue: 1
    MaxValue: 16384
    Default: 20
  MvtTerminationQuietPeriodMs:
    Type: Number
    Default: 600000
  MvtGenVolumeSizeGB:
    Type: Number
    MinValue: 1
    MaxValue: 16384
    Default: 100
  MvtGenInstanceType:
    Type: "String"
    Default: "t2.large"
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m1.small
      - m1.medium
      - m1.large
      - m1.xlarge
      - m2.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - c1.medium
      - c1.xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - g2.2xlarge
      - g2.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - hi1.4xlarge
      - hs1.8xlarge
      - cr1.8xlarge
      - cc2.8xlarge
      - cg1.4xlarge
    ConstraintDescription: "must be a valid EC2 instance type."

Conditions:
  IsDeployAdminResources:
    !Equals [!Ref DeployAdminResources, 'yes']
  CrIsRelease:
    Fn::Equals:
      - @cr.version@
      - Fn::Join:
          - ""
          - Fn::Split:
              - "-SNAPSHOT"
              - @cr.version@
  R2zIsRelease:
    Fn::Equals:
      - @r2z.version@
      - Fn::Join:
          - ""
          - Fn::Split:
              - "-SNAPSHOT"
              - @r2z.version@
  ZaIsRelease:
    Fn::Equals:
      - @za.version@
      - Fn::Join:
          - ""
          - Fn::Split:
              - "-SNAPSHOT"
              - @za.version@
  UiIsRelease:
    Fn::Equals:
      - @ui.version@
      - Fn::Join:
          - ""
          - Fn::Split:
              - "-SNAPSHOT"
              - @ui.version@
  ApiIsRelease:
    Fn::Equals:
      - @api.version@
      - Fn::Join:
          - ""
          - Fn::Split:
              - "-SNAPSHOT"
              - @api.version@
  DsIsRelease:
    Fn::Equals:
      - @ds.version@
      - Fn::Join:
          - ""
          - Fn::Split:
              - "-SNAPSHOT"
              - @ds.version@
  MvtIsRelease:
    Fn::Equals:
      - @mvt.version@
      - Fn::Join:
          - ""
          - Fn::Split:
              - "-SNAPSHOT"
              - @mvt.version@
  GeohIsRelease:
    Fn::Equals:
      - @geoh.version@
      - Fn::Join:
          - ""
          - Fn::Split:
              - "-SNAPSHOT"
              - @geoh.version@

Resources:

  BucketStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackPrefix: !Ref StackPrefix
        EnvironmentType:
          Fn::ImportValue: !Sub ${StackPrefix}-echofish-environment-type
        LambdaRolePermissionsBoundary: !Ref LambdaRolePermissionsBoundary
        DeploymentBucketName:
          Fn::ImportValue: !Sub ${StackPrefix}-echofish-deployment-bucket
        CustomResourceLambdaVersion: !If [CrIsRelease, @cr.version@, @cr.version@@dashTimestamp@]
      TemplateURL:
        Fn::Sub:
          - https://${DeploymentBucketName}.s3.${AWS::Region}.amazonaws.com/stack/nested/bucket-stack.yaml
          - DeploymentBucketName:
              Fn::ImportValue: !Sub ${StackPrefix}-echofish-deployment-bucket

  TopicStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Sub:
          - https://${DeploymentBucketName}.s3.${AWS::Region}.amazonaws.com/stack/nested/topic-stack.yaml
          - DeploymentBucketName:
              Fn::ImportValue: !Sub ${StackPrefix}-echofish-deployment-bucket

  QueueStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Sub:
          - https://${DeploymentBucketName}.s3.${AWS::Region}.amazonaws.com/stack/nested/queue-stack.yaml
          - DeploymentBucketName:
              Fn::ImportValue: !Sub ${StackPrefix}-echofish-deployment-bucket


  DynamoStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackPrefix: !Ref StackPrefix
        EnvironmentType:
          Fn::ImportValue: !Sub ${StackPrefix}-echofish-environment-type
      TemplateURL:
        Fn::Sub:
          - https://${DeploymentBucketName}.s3.${AWS::Region}.amazonaws.com/stack/nested/dynamo-stack.yaml
          - DeploymentBucketName:
              Fn::ImportValue: !Sub ${StackPrefix}-echofish-deployment-bucket


  Raw2ZarrStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        Raw2ZarrQueueArn:
          Fn::GetAtt:
            - QueueStack
            - Outputs.Raw2ZarrQueueArn
        QuietPeriodMs: !Ref Raw2ZarrTerminationQuietPeriodMs
        InstanceType: !Ref Raw2ZarrInstanceType
        VolumeSizeGB: !Ref Raw2ZarrVolumeSizeGB
        LogRetentionInDays: !Ref LogRetentionInDays
        DeploymentBucketName:
          Fn::ImportValue: !Sub ${StackPrefix}-echofish-deployment-bucket
        LambdaRolePermissionsBoundary: !Ref LambdaRolePermissionsBoundary
        DynamicStackLambdaVersion: !If [DsIsRelease, @ds.version@, @ds.version@@dashTimestamp@]
        Raw2ZarrDockerVersion: !If [R2zIsRelease, @r2z.version@, @r2z.version@@dashTimestamp@]
        DataSetBucketName: !Ref DataSetBucketName
        ZarrFileBucketName:
          Fn::GetAtt:
            - BucketStack
            - Outputs.ZarrFileBucketName
        ZarrAccumulatorReadyTopicArn:
          Fn::GetAtt:
            - TopicStack
            - Outputs.ZarrAccumulatorReadyTopicArn
        Raw2ZarrTableName:
          Fn::GetAtt:
            - DynamoStack
            - Outputs.Raw2ZarrTableName
      TemplateURL:
        Fn::Sub:
          - https://${DeploymentBucketName}.s3.${AWS::Region}.amazonaws.com/stack/nested/raw2zarr-stack.yaml
          - DeploymentBucketName:
              Fn::ImportValue: !Sub ${StackPrefix}-echofish-deployment-bucket

  ZarrAccumulatorStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        DeploymentBucketName:
          Fn::ImportValue: !Sub ${StackPrefix}-echofish-deployment-bucket
        LambdaRolePermissionsBoundary: !Ref LambdaRolePermissionsBoundary
        ZarrAccumulatorLambdaMaxConcurrency: !Ref ZarrAccumulatorLambdaMaxConcurrency
        ZarrAccumulatorLambdaTimeout: !Ref ZarrAccumulatorLambdaTimeout
        ZarrAccumulatorLambdaMemorySize: !Ref ZarrAccumulatorLambdaMemorySize
        ZarrAccumulatorDoneTopicArn:
          Fn::GetAtt:
            - TopicStack
            - Outputs.ZarrAccumulatorDoneTopicArn
        ZarrFileBucketName:
          Fn::GetAtt:
            - BucketStack
            - Outputs.ZarrFileBucketName
        ZarrStoreBucketName:
          Fn::GetAtt:
            - BucketStack
            - Outputs.ZarrStoreBucketName
        DeadLetterTopicArn:
          Fn::GetAtt:
            - TopicStack
            - Outputs.DeadLetterTopicArn
        LogRetentionInDays: !Ref LogRetentionInDays
        Version: !If [ZaIsRelease, @za.version@, @za.version@@dashTimestamp@]
      TemplateURL:
        Fn::Sub:
          - https://${DeploymentBucketName}.s3.${AWS::Region}.amazonaws.com/stack/nested/zarr-accumulator-stack.yaml
          - DeploymentBucketName:
              Fn::ImportValue: !Sub ${StackPrefix}-echofish-deployment-bucket

  Zarr2MvtStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        MvtTracklineSplitMs: !Ref MvtTracklineSplitMs
        MvtBatchSize: !Ref MvtBatchSize
        MvtTracklinePrecision: !Ref MvtTracklinePrecision
        MvtMaxZoomLevel: !Ref MvtMaxZoomLevel
        MvtTracklineMinSimplificationTolerance: !Ref MvtTracklineMinSimplificationTolerance
        MvtTracklineMaxSimplificationTolerance: !Ref MvtTracklineMaxSimplificationTolerance
        MvtUploadBuffers: !Ref MvtUploadBuffers
        DeploymentBucketName:
          Fn::ImportValue: !Sub ${StackPrefix}-echofish-deployment-bucket
        LambdaRolePermissionsBoundary: !Ref LambdaRolePermissionsBoundary
        Zarr2MvtLambdaTimeout: !Ref Zarr2MvtLambdaTimeout
        Zarr2MvtLambdaMemorySize: !Ref Zarr2MvtLambdaMemorySize
        ZarrStoreBucketName:
          Fn::GetAtt:
            - BucketStack
            - Outputs.ZarrStoreBucketName
        MvtBucketName:
          Fn::GetAtt:
            - BucketStack
            - Outputs.MvtBucketName
        LogRetentionInDays: !Ref LogRetentionInDays
        DeadLetterTopicArn:
          Fn::GetAtt:
            - TopicStack
            - Outputs.DeadLetterTopicArn
        Version: !If [MvtIsRelease, @mvt.version@, @mvt.version@@dashTimestamp@]
        MvtDoneTopicArn:
          Fn::GetAtt:
            - TopicStack
            - Outputs.MvtDoneTopicArn
      TemplateURL:
        Fn::Sub:
          - https://${DeploymentBucketName}.s3.${AWS::Region}.amazonaws.com/stack/nested/zarr2mvt-stack.yaml
          - DeploymentBucketName:
              Fn::ImportValue: !Sub ${StackPrefix}-echofish-deployment-bucket
  Zarr2GeoHashStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        GeoHashUploadBuffers: !Ref GeoHashUploadBuffers
        DeploymentBucketName:
          Fn::ImportValue: !Sub ${StackPrefix}-echofish-deployment-bucket
        LambdaRolePermissionsBoundary: !Ref LambdaRolePermissionsBoundary
        Zarr2GeoHashLambdaTimeout: !Ref Zarr2GeoHashLambdaTimeout
        Zarr2GeoHashLambdaMemorySize: !Ref Zarr2GeoHashLambdaMemorySize
        Zarr2GeoHashLambdaMaxConcurrency: !Ref Zarr2GeoHashLambdaMaxConcurrency
        ZarrStoreBucketName:
          Fn::GetAtt:
            - BucketStack
            - Outputs.ZarrStoreBucketName
        GeoHashBucketName:
          Fn::GetAtt:
            - BucketStack
            - Outputs.GeoHashBucketName
        LogRetentionInDays: !Ref LogRetentionInDays
        DeadLetterTopicArn:
          Fn::GetAtt:
            - TopicStack
            - Outputs.DeadLetterTopicArn
        Version: !If [ GeohIsRelease, @geoh.version@, @geoh.version@@dashTimestamp@ ]
        GeoHashDoneTopicArn:
          Fn::GetAtt:
            - TopicStack
            - Outputs.GeoHashDoneTopicArn
      TemplateURL:
        Fn::Sub:
          - https://${DeploymentBucketName}.s3.${AWS::Region}.amazonaws.com/stack/nested/zarr2geohash-stack.yaml
          - DeploymentBucketName:
              Fn::ImportValue: !Sub ${StackPrefix}-echofish-deployment-bucket

  CloudFrontStack:
    Type: AWS::CloudFormation::Stack
    Condition: IsDeployAdminResources
    Properties:
      Parameters:
        UiBucketName:
          Fn::GetAtt:
            - BucketStack
            - Outputs.UiBucketName
      TemplateURL:
        Fn::Sub:
          - https://${DeploymentBucketName}.s3.${AWS::Region}.amazonaws.com/stack/nested/cloudfront-stack.yaml
          - DeploymentBucketName:
              Fn::ImportValue: !Sub ${StackPrefix}-echofish-deployment-bucket

  UiStack:
    Type: AWS::CloudFormation::Stack
    Condition: IsDeployAdminResources
    Properties:
      Parameters:
        DeploymentBucketName:
          Fn::ImportValue: !Sub ${StackPrefix}-echofish-deployment-bucket
        LambdaRolePermissionsBoundary: !Ref LambdaRolePermissionsBoundary
        LogRetentionInDays: !Ref LogRetentionInDays
        Version: !If [UiIsRelease, @ui.version@, @ui.version@@dashTimestamp@]
        UiBucketName:
          Fn::GetAtt:
            - BucketStack
            - Outputs.UiBucketName
#        TokenProviderUrl:
#          Fn::GetAtt:
#            - CognitoStack
#            - Outputs.TokenProviderUrl
        RestApiUrl:
          Fn::GetAtt:
            - GatewayStack
            - Outputs.RestApiUrl
        MvtBaseUrl:
          Fn::GetAtt:
            - BucketStack
            - Outputs.MvtBucketBaseUrl
        GeoHashBaseUrl:
          Fn::GetAtt:
            - BucketStack
            - Outputs.GeoHashBucketBaseUrl
        ZarrBaseUrl:
          Fn::GetAtt:
            - BucketStack
            - Outputs.ZarrStoreBucketBaseUrl
#        OAuthClientId:
#          Fn::GetAtt:
#            - CognitoStack
#            - Outputs.OAuthClientId
        StackPrefix: !Ref StackPrefix
      TemplateURL:
        Fn::Sub:
          - https://${DeploymentBucketName}.s3.${AWS::Region}.amazonaws.com/stack/nested/ui-stack.yaml
          - DeploymentBucketName:
              Fn::ImportValue: !Sub ${StackPrefix}-echofish-deployment-bucket

  ApiLambdaStack:
    Type: AWS::CloudFormation::Stack
    Condition: IsDeployAdminResources
    Properties:
      Parameters:
        DeploymentBucketName:
          Fn::ImportValue: !Sub ${StackPrefix}-echofish-deployment-bucket
        LambdaRolePermissionsBoundary: !Ref LambdaRolePermissionsBoundary
        ApiLambdaMemorySize: !Ref ApiLambdaMemorySize
        ApiLambdaTimeout: !Ref ApiLambdaTimeout
        LogRetentionInDays: !Ref LogRetentionInDays
        Version: !If [ApiIsRelease, @api.version@, @api.version@@dashTimestamp@]
        ApiLambdaMaxConcurrency: !Ref ApiLambdaMaxConcurrency
      TemplateURL:
        Fn::Sub:
          - https://${DeploymentBucketName}.s3.${AWS::Region}.amazonaws.com/stack/nested/api-stack.yaml
          - DeploymentBucketName:
              Fn::ImportValue: !Sub ${StackPrefix}-echofish-deployment-bucket

  GatewayStack:
    Type: AWS::CloudFormation::Stack
    Condition: IsDeployAdminResources
    Properties:
      Parameters:
        LambdaRolePermissionsBoundary: !Ref LambdaRolePermissionsBoundary
        ApiLambdaArn:
          Fn::GetAtt:
            - ApiLambdaStack
            - Outputs.ApiLambdaArn
        StackPrefix: !Ref StackPrefix
      TemplateURL:
        Fn::Sub:
          - https://${DeploymentBucketName}.s3.${AWS::Region}.amazonaws.com/stack/nested/gateway-stack.yaml
          - DeploymentBucketName:
              Fn::ImportValue: !Sub ${StackPrefix}-echofish-deployment-bucket


#  GeometryPipelineStack:
#    Type: AWS::CloudFormation::Stack
#    Properties:
#      Parameters:
#        MvtGenerationQueueArn:
#          Fn::GetAtt:
#            - QueueStack
#            - Outputs.MvtGenerationQueueArn
#        LambdaRolePermissionsBoundary: !Ref LambdaRolePermissionsBoundary
#        LogRetentionInDays: !Ref LogRetentionInDays
#        DeploymentBucketName:
#          Fn::ImportValue: !Sub ${StackPrefix}-echofish-deployment-bucket
#        MvtDockerVersion: !If [MvtIsRelease, @mvt.version@, @mvt.version@@dashTimestamp@]
#        DynamicStackLambdaVersion: !If [DsIsRelease, @ds.version@, @ds.version@@dashTimestamp@]
#        MvtBucketName:
#          Fn::GetAtt:
#            - BucketStack
#            - Outputs.MvtBucketName
#        MbTilesBucketName:
#          Fn::GetAtt:
#            - BucketStack
#            - Outputs.MbTilesBucketName
#        InstanceType: !Ref MvtGenInstanceType
#        VolumeSizeGB: !Ref MvtGenVolumeSizeGB
#        QuietPeriodMs: !Ref MvtTerminationQuietPeriodMs
#      TemplateURL:
#        Fn::Sub:
#          - https://${DeploymentBucketName}.s3.${AWS::Region}.amazonaws.com/stack/nested/mvt-stack.yaml
#          - DeploymentBucketName:
#              Fn::ImportValue: !Sub ${StackPrefix}-echofish-deployment-bucket


  TopicSubscriptionStack:
    Type: AWS::CloudFormation::Stack
    Condition: IsDeployAdminResources
    Properties:
      Parameters:
        BucketSnsNotificationLambdaVersion: !If [CrIsRelease, @cr.version@, @cr.version@@dashTimestamp@]
        DeploymentBucketName:
          Fn::ImportValue: !Sub ${StackPrefix}-echofish-deployment-bucket
        LambdaRolePermissionsBoundary: !Ref LambdaRolePermissionsBoundary
        Raw2ZarrTopicArn:
          Fn::GetAtt:
            - TopicStack
            - Outputs.Raw2ZarrTopicArn
        MvtGenerationQueueArn:
          Fn::GetAtt:
            - QueueStack
            - Outputs.MvtGenerationQueueArn
        MvtGenerationQueueUrl:
          Fn::GetAtt:
            - QueueStack
            - Outputs.MvtGenerationQueueUrl
        GeoHashGenerationQueueArn:
          Fn::GetAtt:
            - QueueStack
            - Outputs.GeoHashGenerationQueueArn
        GeoHashGenerationQueueUrl:
          Fn::GetAtt:
            - QueueStack
            - Outputs.GeoHashGenerationQueueUrl
        DeployRaw2ZarrLambdaArn:
          Fn::GetAtt:
            - Raw2ZarrStack
            - Outputs.DeployRaw2ZarrLambdaArn
        DeployRaw2ZarrLambdaName:
          Fn::GetAtt:
            - Raw2ZarrStack
            - Outputs.DeployRaw2ZarrLambdaName
        DeadLetterTopicArn:
          Fn::GetAtt:
            - TopicStack
            - Outputs.DeadLetterTopicArn
        ZarrAccumulatorReadyTopicArn:
          Fn::GetAtt:
            - TopicStack
            - Outputs.ZarrAccumulatorReadyTopicArn
        ZarrAccumulatorDoneTopicArn:
          Fn::GetAtt:
            - TopicStack
            - Outputs.ZarrAccumulatorDoneTopicArn
        ZarrAccumulatorLambdaArn:
          Fn::GetAtt:
            - ZarrAccumulatorStack
            - Outputs.ZarrAccumulatorLambdaArn
        ZarrAccumulatorLambdaName:
          Fn::GetAtt:
            - ZarrAccumulatorStack
            - Outputs.ZarrAccumulatorLambdaName
        Zarr2MvtLambdaArn:
          Fn::GetAtt:
            - Zarr2MvtStack
            - Outputs.Zarr2MvtLambdaArn
        Zarr2GeoHashLambdaArn:
          Fn::GetAtt:
            - Zarr2GeoHashStack
            - Outputs.Zarr2GeoHashLambdaArn
        Zarr2MvtLambdaName:
          Fn::GetAtt:
            - Zarr2MvtStack
            - Outputs.2MvtLambdaName
        Zarr2GeoHashLambdaName:
          Fn::GetAtt:
            - Zarr2GeoHashStack
            - Outputs.Zarr2GeoHashLambdaName
      TemplateURL:
        Fn::Sub:
          - https://${DeploymentBucketName}.s3.${AWS::Region}.amazonaws.com/stack/nested/topic-subscription-stack.yaml
          - DeploymentBucketName:
              Fn::ImportValue: !Sub ${StackPrefix}-echofish-deployment-bucket

