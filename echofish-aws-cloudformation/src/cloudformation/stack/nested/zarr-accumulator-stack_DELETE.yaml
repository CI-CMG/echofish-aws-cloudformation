AWSTemplateFormatVersion: 2010-09-09
Description: Accumulate individual Zarr files to Zarr stores

Parameters:
  DeploymentBucketName:
    Type: String
  LambdaRolePermissionsBoundary:
    Type: String
  ZarrAccumulatorLambdaMaxConcurrency:
    Type: Number
  ZarrAccumulatorLambdaTimeout:
    Type: Number
  ZarrAccumulatorLambdaMemorySize:
    Type: Number
  ZarrFileBucketName:
    Type: String
  ZarrStoreBucketName:
    Type: String
  LogRetentionInDays:
    Type: Number
  DeadLetterTopicArn:
    Type: String
  Version:
    Type: String
  ZarrAccumulatorDoneTopicArn:
    Type: String


Conditions:
  HasPermissionsBoundary:
    Fn::Not:
      - Fn::Equals:
          - ""
          - !Ref LambdaRolePermissionsBoundary

Resources:

  ZarrAccumulatorLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      PermissionsBoundary:
        Fn::If:
          - HasPermissionsBoundary
          - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/${LambdaRolePermissionsBoundary}
          - AWS::NoValue
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: Logging
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: !Sub arn:${AWS::Partition}:logs:*:*:*
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
        - PolicyName: S3
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource:
                  - !Sub arn:${AWS::Partition}:s3:::${ZarrFileBucketName}/*
                  - !Sub arn:${AWS::Partition}:s3:::${ZarrStoreBucketName}/*
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
              - Effect: Allow
                Resource:
                  - !Sub arn:${AWS::Partition}:s3:::${ZarrFileBucketName}
                  - !Sub arn:${AWS::Partition}:s3:::${ZarrStoreBucketName}
                Action:
                  - s3:ListBucket
        - PolicyName: SNS
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource:
                  - !Ref DeadLetterTopicArn
                  - !Ref ZarrAccumulatorDoneTopicArn
                Action:
                  - sns:Publish


  ZarrAccumulatorLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref DeploymentBucketName
        S3Key: !Sub lambda/echofish-aws-zarr-accumulator-lambda-${Version}-lambda.zip
      Handler: echofish_zarr_accumulator.zarr_accumulator_lambda.lambda_handler
      Runtime: python3.8
      MemorySize: !Ref ZarrAccumulatorLambdaMemorySize
      Timeout: !Ref ZarrAccumulatorLambdaTimeout
      ReservedConcurrentExecutions: !Ref ZarrAccumulatorLambdaMaxConcurrency
      Role: !GetAtt ZarrAccumulatorLambdaRole.Arn
      Environment:
        Variables:
          ZARR_STORE_BUCKET_NAME: !Ref ZarrStoreBucketName
          ZARR_FILE_BUCKET_NAME: !Ref ZarrFileBucketName
          ZARR_ACCUMULATOR_DONE_TOPIC_ARN: !Ref ZarrAccumulatorDoneTopicArn

  ZarrAccumulatorLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${ZarrAccumulatorLambda}
      RetentionInDays: !Ref LogRetentionInDays

  ZarrAccumulatorLambdaEvent:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName: !Ref ZarrAccumulatorLambda
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
      DestinationConfig:
        OnFailure:
          Destination: !Ref DeadLetterTopicArn


Outputs:
  ZarrAccumulatorLambdaArn:
    Value: !GetAtt ZarrAccumulatorLambda.Arn
  ZarrAccumulatorLambdaName:
    Value: !Ref ZarrAccumulatorLambda




