AWSTemplateFormatVersion: 2010-09-09
Description: EchoFish topics and queues

Parameters:
  StackPrefix:
    Type: String
  DataManagerEmail:
    Type: String

Resources:
  ### [Step 0] Indexing ###
  IndexLambdaTopic:
    Type: AWS::SNS::Topic
    Properties:
      Tags:
        - Key: Application
          Value: EchoFish
        - Key: StackPrefix
          Value: !Ref StackPrefix
      TopicName: !Sub ${StackPrefix}-trigger-index
  IndexDeadLetterTopic:
    Type: AWS::SNS::Topic
    Properties:
      Tags:
        - Key: Application
          Value: EchoFish
        - Key: StackPrefix
          Value: !Ref StackPrefix
      TopicName: !Sub ${StackPrefix}-index-dlq

  ### [Step 1] Cruise Splitter ###
  CruiseSplitterLambdaTopic:
    Type: AWS::SNS::Topic
    Properties:
      Tags:
        - Key: Application
          Value: EchoFish
        - Key: StackPrefix
          Value: !Ref StackPrefix
      TopicName: !Sub ${StackPrefix}-cruise-splitter
  CruiseSplitterDeadLetterTopic:
    Type: AWS::SNS::Topic
    Properties:
      Tags:
        - Key: Application
          Value: EchoFish
        - Key: StackPrefix
          Value: !Ref StackPrefix
      TopicName: !Sub ${StackPrefix}-cruise-splitter-dlq

  ### [Step 2a] Raw to Zarr ###
  RawToZarrLambdaTopic:
    Type: AWS::SNS::Topic
    Properties:
      Tags:
        - Key: Application
          Value: EchoFish
        - Key: StackPrefix
          Value: !Ref StackPrefix
      TopicName: !Sub ${StackPrefix}-raw-to-zarr
  RawToZarrDeadLetterTopic:
    Type: AWS::SNS::Topic
    Properties:
      Tags:
        - Key: Application
          Value: EchoFish
        - Key: StackPrefix
          Value: !Ref StackPrefix
      TopicName: !Sub ${StackPrefix}-raw-to-zarr-dlq

  ### [Step 2b] Raw to Zarr Error Handler ###
  # ?

  ### [Step 3] Zarr Cruise Accumulator ###
  ZarrCruiseAccumulatorLambdaTopic:
    Type: AWS::SNS::Topic
    Properties:
      Tags:
        - Key: Application
          Value: EchoFish
        - Key: StackPrefix
          Value: !Ref StackPrefix
      TopicName: !Sub ${StackPrefix}-zarr-cruise-accumulator
  ZarrCruiseAccumulatorDeadLetterTopic:
    Type: AWS::SNS::Topic
    Properties:
      Tags:
        - Key: Application
          Value: EchoFish
        - Key: StackPrefix
          Value: !Ref StackPrefix
      TopicName: !Sub ${StackPrefix}-zarr-cruise-accumulator-dlq

  ### [Step 4] Create Empty Zarr Store ###
  CreateEmptyZarrStoreLambdaTopic:
    Type: AWS::SNS::Topic
    Properties:
      Tags:
        - Key: Application
          Value: EchoFish
        - Key: StackPrefix
          Value: !Ref StackPrefix
      TopicName: !Sub ${StackPrefix}-create-empty-zarr-store

  ### [Step 5] Resample and Write to Zarr Store ###
  ResampleAndWriteToZarrStoreLambdaTopic:
    Type: AWS::SNS::Topic
    Properties:
      Tags:
        - Key: Application
          Value: EchoFish
        - Key: StackPrefix
          Value: !Ref StackPrefix
      TopicName: !Sub ${StackPrefix}-resample-and-write-to-zarr-store
  ResampleAndWriteToZarrStoreDeadLetterTopic:
    Type: AWS::SNS::Topic
    Properties:
      Tags:
        - Key: Application
          Value: EchoFish
        - Key: StackPrefix
          Value: !Ref StackPrefix
      TopicName: !Sub ${StackPrefix}-resample-and-write-to-zarr-store-dlq

  ### [Step 6] Finished Processing ###
  ProcessingFinishedTopic:
    Type: AWS::SNS::Topic
    Properties:
      Tags:
        - Key: Application
          Value: EchoFish
        - Key: StackPrefix
          Value: !Ref StackPrefix
      TopicName: !Sub ${StackPrefix}-processing-finished
  ProcessingFinishedDeadLetterTopic:
    Type: AWS::SNS::Topic
    Properties:
      Tags:
        - Key: Application
          Value: EchoFish
        - Key: StackPrefix
          Value: !Ref StackPrefix
      TopicName: !Sub ${StackPrefix}-processing-finished-dlq

  ### [Step 7] Email Data Manager ###
  EmailDataManagerTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref DataManagerEmail
          Protocol: "email"
      Tags:
        - Key: Application
          Value: EchoFish
        - Key: StackPrefix
          Value: !Ref StackPrefix
      TopicName: !Sub ${StackPrefix}-email-data-manager
  EmailDataManagerDeadLetterTopic:
    Type: AWS::SNS::Topic
    Properties:
      Tags:
        - Key: Application
          Value: EchoFish
        - Key: StackPrefix
          Value: !Ref StackPrefix
      TopicName: !Sub ${StackPrefix}-email-data-manager-dlq

Outputs:
  ### [Step 0] Indexing ###
  IndexLambdaTopicArn:
    Value: !Ref IndexLambdaTopic
  IndexDeadLetterTopicArn:
    Value: !Ref IndexDeadLetterTopic

  ### [Step 1] Cruise Splitter ###
  CruiseSplitterLambdaTopicArn:
    Value: !Ref CruiseSplitterLambdaTopic
  CruiseSplitterDeadLetterTopicArn:
    Value: !Ref CruiseSplitterDeadLetterTopic

  ### [Step 2a] Raw to Zarr ###
  RawToZarrLambdaTopicArn:
    Value: !Ref RawToZarrLambdaTopic
  RawToZarrDeadLetterTopicArn:
    Value: !Ref RawToZarrDeadLetterTopic

  ### [Step 3] Zarr Cruise Accumulator ###
  ZarrCruiseAccumulatorLambdaTopicArn:
    Value: !Ref ZarrCruiseAccumulatorLambdaTopic
  ZarrCruiseAccumulatorDeadLetterTopicArn:
    Value: !Ref ZarrCruiseAccumulatorDeadLetterTopic

  ### [Step 4] Create Empty Zarr Store ###
  CreateEmptyZarrStoreLambdaTopicArn:
    Value: !Ref CreateEmptyZarrStoreLambdaTopic

  ### [Step 5] Resample and Write to Zarr Store ###
  ResampleAndWriteToZarrStoreLambdaTopicArn:
    Value: !Ref ResampleAndWriteToZarrStoreLambdaTopic
  ResampleAndWriteToZarrStoreDeadLetterTopicArn:
    Value: !Ref ResampleAndWriteToZarrStoreDeadLetterTopic

  ### [Step 6] Processing Finished ###
  ProcessingFinishedTopicArn:
    Value: !Ref ProcessingFinishedTopic
  ProcessingFinishedDeadLetterTopicArn:
    Value: !Ref ProcessingFinishedDeadLetterTopic

  ### [Step 7] Email Data Manager ###
  EmailDataManagerTopicArn:
    Value: !Ref EmailDataManagerTopic
  EmailDataManagerDeadLetterTopicArn:
    Value: !Ref EmailDataManagerDeadLetterTopic
