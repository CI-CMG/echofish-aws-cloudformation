AWSTemplateFormatVersion: 2010-09-09
Description: EchoFish Geometry Pipeline

Parameters:
  MvtGenerationQueueArn:
    Type: String
  LogRetentionInDays:
    Type: Number
    Default: 30
  DeploymentBucketName:
    Type: String
  LambdaRolePermissionsBoundary:
    Type: String
  DynamicStackLambdaVersion:
    Type: String
  MvtDockerVersion:
    Type: String
  MvtBucketName:
    Type: String
  MbTilesBucketName:
    Type: String
  QuietPeriodMs:
    Type: Number
  VolumeSizeGB:
    Type: Number
  InstanceType:
    Type: "String"
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m1.small
      - m1.medium
      - m1.large
      - m1.xlarge
      - m2.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - c1.medium
      - c1.xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - g2.2xlarge
      - g2.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - hi1.4xlarge
      - hs1.8xlarge
      - cr1.8xlarge
      - cc2.8xlarge
      - cg1.4xlarge

Conditions:
  HasPermissionsBoundary:
    Fn::Not:
      - Fn::Equals:
          - ""
          - !Ref LambdaRolePermissionsBoundary

Mappings:
  AWSInstanceType2Arch:
    t1.micro:
      Arch: HVM64
    t2.nano:
      Arch: HVM64
    t2.micro:
      Arch: HVM64
    t2.small:
      Arch: HVM64
    t2.medium:
      Arch:  HVM64
    t2.large:
      Arch:  HVM64
    m1.small:
      Arch:  HVM64
    m1.medium:
      Arch:  HVM64
    m1.large:
      Arch:  HVM64
    m1.xlarge:
      Arch:  HVM64
    m2.xlarge:
      Arch:  HVM64
    m2.2xlarge:
      Arch:  HVM64
    m2.4xlarge:
      Arch:  HVM64
    m3.medium:
      Arch:  HVM64
    m3.large:
      Arch:  HVM64
    m3.xlarge:
      Arch:  HVM64
    m3.2xlarge:
      Arch:  HVM64
    m4.large:
      Arch:  HVM64
    m4.xlarge:
      Arch:  HVM64
    m4.2xlarge:
      Arch:  HVM64
    m4.4xlarge:
      Arch:  HVM64
    m4.10xlarge:
      Arch:  HVM64
    c1.medium:
      Arch:  HVM64
    c1.xlarge:
      Arch:  HVM64
    c3.large:
      Arch:  HVM64
    c3.xlarge:
      Arch:  HVM64
    c3.2xlarge:
      Arch:  HVM64
    c3.4xlarge:
      Arch:  HVM64
    c3.8xlarge:
      Arch:  HVM64
    c4.large:
      Arch:  HVM64
    c4.xlarge:
      Arch:  HVM64
    c4.2xlarge:
      Arch:  HVM64
    c4.4xlarge:
      Arch:  HVM64
    c4.8xlarge:
      Arch:  HVM64
    g2.2xlarge:
      Arch:  HVMG2
    g2.8xlarge:
      Arch:  HVMG2
    r3.large:
      Arch:  HVM64
    r3.xlarge:
      Arch:  HVM64
    r3.2xlarge:
      Arch:  HVM64
    r3.4xlarge:
      Arch:  HVM64
    r3.8xlarge:
      Arch:  HVM64
    i2.xlarge:
      Arch:  HVM64
    i2.2xlarge:
      Arch:  HVM64
    i2.4xlarge:
      Arch:  HVM64
    i2.8xlarge:
      Arch:  HVM64
    d2.xlarge:
      Arch:  HVM64
    d2.2xlarge:
      Arch:  HVM64
    d2.4xlarge:
      Arch:  HVM64
    d2.8xlarge:
      Arch:  HVM64
    hi1.4xlarge:
      Arch:  HVM64
    hs1.8xlarge:
      Arch:  HVM64
    cr1.8xlarge:
      Arch:  HVM64
    cc2.8xlarge:
      Arch:  HVM64

  AWSRegionArch2AMI:
    us-east-1:
      HVM64: "ami-0ff8a91507f77f867"
      HVMG2: "ami-0a584ac55a7631c0c"
    us-west-2:
      HVM64: "ami-a0cfeed8"
      HVMG2: "ami-0e09505bc235aa82d"
    us-west-1:
      HVM64: "ami-0bdb828fd58c52235"
      HVMG2: "ami-066ee5fd4a9ef77f1"
    eu-west-1:
      HVM64: "ami-047bb4163c506cd98"
      HVMG2: "ami-0a7c483d527806435"
    eu-west-2:
      HVM64: "ami-f976839e"
      HVMG2: "NOT_SUPPORTED"
    eu-west-3:
      HVM64: "ami-0ebc281c20e89ba4b"
      HVMG2: "NOT_SUPPORTED"
    eu-central-1:
      HVM64: "ami-0233214e13e500f77"
      HVMG2: "ami-06223d46a6d0661c7"
    ap-northeast-1:
      HVM64: "ami-06cd52961ce9f0d85"
      HVMG2: "ami-053cdd503598e4a9d"
    ap-northeast-2:
      HVM64: "ami-0a10b2721688ce9d2"
      HVMG2: "NOT_SUPPORTED"
    ap-northeast-3:
      HVM64: "ami-0d98120a9fb693f07"
      HVMG2: "NOT_SUPPORTED"
    ap-southeast-1:
      HVM64: "ami-08569b978cc4dfa10"
      HVMG2: "ami-0be9df32ae9f92309"
    ap-southeast-2:
      HVM64: "ami-09b42976632b27e9b"
      HVMG2: "ami-0a9ce9fecc3d1daf8"
    ap-south-1:
      HVM64: "ami-0912f71e06545ad88"
      HVMG2: "ami-097b15e89dbdcfcf4"
    us-east-2:
      HVM64: "ami-0b59bfac6be064b78"
      HVMG2: "NOT_SUPPORTED"
    ca-central-1:
      HVM64: "ami-0b18956f"
      HVMG2: "NOT_SUPPORTED"
    sa-east-1:
      HVM64: "ami-07b14488da8ea02a0"
      HVMG2: "NOT_SUPPORTED"
    cn-north-1:
      HVM64: "ami-0a4eaf6c4454eda75"
      HVMG2: "NOT_SUPPORTED"
    cn-northwest-1:
      HVM64: "ami-6b6a7d09"
      HVMG2: "NOT_SUPPORTED"


Resources:


  DeployGeometryMvtPipelineLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      PermissionsBoundary:
        Fn::If:
          - HasPermissionsBoundary
          - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/${LambdaRolePermissionsBoundary}
          - AWS::NoValue
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: Logging
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: !Sub arn:${AWS::Partition}:logs:*:*:*
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
        - PolicyName: CloudFormation
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: !Sub arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/*/*
                Action:
                  - cloudformation:*
        - PolicyName: S3
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: !Sub arn:${AWS::Partition}:s3:::${DeploymentBucketName}/*
                Action:
                  - s3:GetObject
#         TODO restrict this
        - PolicyName: EC2
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: '*'
                Action: '*'


  DeployGeometryMvtPipelineLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref DeploymentBucketName
        S3Key: !Sub lambda/echofish-aws-dynamic-stack-lambda-${DynamicStackLambdaVersion}-lambda.zip
      Handler: edu.colorado.cires.cmg.echofish.aws.lambda.stack.DeployStackLambda::handleRequest
      Runtime: java11
      MemorySize: 512
      Timeout: 600
      Role: !GetAtt DeployGeometryMvtPipelineLambdaRole.Arn
      Environment:
        Variables:
          STACK_NAME: !Sub ${AWS::StackName}-geom-pipe
          BUCKET_NAME: !Ref DeploymentBucketName
          TEMPLATE_KEY: stack/dynamic/mvt-ec2.yaml
          CF_EC2LogGroup: !Ref EC2LogGroup
          CF_EC2InstanceProfile : !Ref EC2InstanceProfile
          CF_ImageId:
            Fn::FindInMap:
              - AWSRegionArch2AMI
              - !Ref AWS::Region
              - Fn::FindInMap:
                  - AWSInstanceType2Arch
                  - !Ref InstanceType
                  - Arch
          CF_VolumeSizeGB: !Ref VolumeSizeGB
          CF_InstanceType: !Ref InstanceType
          CF_XYZTILESBUCKET: !Ref MvtBucketName
          CF_MBTILESBUCKET: !Ref MbTilesBucketName
          CF_MBTILESKEY: global.mbtiles
          CF_SQSARN: !Ref MvtGenerationQueueArn
          CF_QUIETPERIODMS: !Ref QuietPeriodMs
          CF_DeploymentBucketName: !Ref DeploymentBucketName
          CF_Version: !Ref MvtDockerVersion


  EC2LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/ec2/${AWS::StackName}/mvt-gen
      RetentionInDays: !Ref LogRetentionInDays

  EC2Role:
    Type: "AWS::IAM::Role"
    Properties:
      PermissionsBoundary: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/CIRES_Admin_PermissionBoundary
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: Logging
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: ec2:AssociateAddress
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogStreams
                Resource: arn:aws:logs:*:*:*
#         TODO restrict this
        - PolicyName: All
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: '*'
                Action: '*'

  EC2InstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: '/'
      Roles:
        - Ref: EC2Role





Outputs:
  DeployGeometryMvtPipelineLambdaArn:
    Value: !GetAtt DeployGeometryMvtPipelineLambda.Arn
  DeployGeometryMvtPipelineLambdaName:
    Value: !Ref DeployGeometryMvtPipelineLambda
